services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: relayer-backend-app
    ports:
      - '${PORT:-3000}:${PORT:-3000}'
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-3000}
      - APP_URL=${APP_URL:-http://localhost:3000}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - HEALTH_CHECK_URL=${HEALTH_CHECK_URL:-http://localhost:3000/health}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - relayer-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '-f',
          '${HEALTH_CHECK_URL:-http://localhost:3000/health}',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: relayer-backend-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - relayer-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

volumes:
  redis_data:
    driver: local

networks:
  relayer-network:
    driver: bridge
